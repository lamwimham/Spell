import { useNavigation } from '@react-navigation/native';
import React from 'react';
import { FlatList, StatusBar, StyleSheet, Text, TouchableOpacity, View } from 'react-native';
import Icon from 'react-native-vector-icons/Ionicons';

interface VoiceItem {
  id: string;
  title: string;
  duration: string;
  size: string;
}

const voiceData: VoiceItem[] = [
  { id: '1', title: 'yt-script-figma.mp3', duration: '13m 24s', size: '3.9mb' },
  { id: '2', title: 'lao-tzu-quote.mp3', duration: '0m 45s', size: '35kb' },
  { id: '3', title: 'figma-tutorial.mp3', duration: '10m 5s', size: '2.5mb' },
  { id: '4', title: 'emotional-speech.mp3', duration: '16m 46s', size: '4.7mb' },
  { id: '5', title: 'yt-funny-video-script.mp3', duration: '00m 00s', size: '00mb' },
  { id: '6', title: 'yt-script-figma-autolayou...', duration: '24m 10s', size: '4.6mb' },
];

export default function HomeScreen() {
  const navigation = useNavigation();

  const renderVoiceItem = ({ item }: { item: VoiceItem }) => (
    <View style={styles.voiceItem}>
      <View style={styles.iconContainer}>
        <Icon name="mic" size={32} color="#6B7280" />
      </View>
      <View style={styles.voiceInfo}>
        <Text style={styles.voiceTitle}>{item.title}</Text>
        <View style={styles.voiceMetaContainer}>
          <Text style={styles.voiceMeta}>{item.duration}</Text>
          <Text style={styles.voiceMetaSeparator}>-</Text>
          <Text style={styles.voiceMeta}>{item.size}</Text>
        </View>
      </View>
      <TouchableOpacity
        style={styles.playButton}
        onPress={() => {
          // TODO: Navigate to player screen using React Navigation
          console.log('Navigate to player');
        }}
      >
        <Icon name="play" size={24} color="#6B7280" />
      </TouchableOpacity>
    </View>
  );

  return (
    <View style={styles.container}>
      <StatusBar barStyle="dark-content" />
      <View style={styles.header}>
        <TouchableOpacity style={styles.backButton} onPress={() => navigation.goBack()}>
          <Icon name="chevron-back" size={24} color="#000" />
        </TouchableOpacity>
        <Text style={styles.headerTitle}>Your library</Text>
        <TouchableOpacity style={styles.deleteButton}>
          <Icon name="trash-outline" size={24} color="#FF3B30" />
        </TouchableOpacity>
      </View>

      <View style={styles.titleContainer}>
        <Text style={styles.title}>Voices Library</Text>
        <Text style={styles.subtitle}>
          Voices generated by vocalicious and you've saved will appear here.
        </Text>
      </View>

      <FlatList
        data={voiceData}
        renderItem={renderVoiceItem}
        keyExtractor={item => item.id}
        contentContainerStyle={styles.listContainer}
        showsVerticalScrollIndicator={false}
      />

      <View style={styles.tabIndicator} />
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#FDFCFF',
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingHorizontal: 16,
    paddingTop: 48,
    paddingBottom: 8,
    height: 96,
  },
  backButton: {
    padding: 8,
  },
  headerTitle: {
    fontSize: 15,
    fontWeight: '400',
    color: '#393640',
    fontFamily: 'Rubik',
  },
  deleteButton: {
    padding: 8,
  },
  titleContainer: {
    paddingHorizontal: 24,
    marginTop: 20,
  },
  title: {
    fontSize: 28,
    fontWeight: '400',
    color: '#393640',
    fontFamily: 'Rubik',
    marginBottom: 8,
  },
  subtitle: {
    fontSize: 17,
    color: '#535059',
    fontFamily: 'Rubik',
    lineHeight: 22,
  },
  listContainer: {
    paddingHorizontal: 20,
    marginTop: 40,
  },
  voiceItem: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 12,
    height: 80,
  },
  iconContainer: {
    width: 48,
    height: 56,
    borderRadius: 8,
    backgroundColor: '#E3E3F1',
    justifyContent: 'center',
    alignItems: 'center',
  },
  voiceInfo: {
    flex: 1,
    marginLeft: 12,
    height: 46,
    justifyContent: 'center',
  },
  voiceTitle: {
    fontSize: 17,
    fontWeight: '400',
    color: '#393640',
    fontFamily: 'Rubik',
    marginBottom: 5,
  },
  voiceMetaContainer: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  voiceMeta: {
    fontSize: 15,
    color: '#535059',
    fontFamily: 'Rubik',
  },
  voiceMetaSeparator: {
    fontSize: 15,
    color: '#D2CED9',
    fontFamily: 'Rubik',
    marginHorizontal: 8,
  },
  playButton: {
    padding: 8,
  },
  tabIndicator: {
    width: 139,
    height: 5,
    backgroundColor: 'black',
    borderRadius: 100,
    alignSelf: 'center',
    marginBottom: 8,
    marginTop: 8,
  },
});
